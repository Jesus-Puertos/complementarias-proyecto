{"version":3,"sources":["horas.js","instructores.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","json","eventos","li","hora","seleccionarHora","obtenerHorasDisponibles","add","dataset","horaId","horaSeleccionada","onclik","instructoresInput","instructores","instructoresFiltrados","listadoInstructores","instructorHidden","seleccionarInstructor","instructor","instructorPrevio","instructorId","respuesta","arrayInstructores","map","nombre","trim","apellido","id","formatearInstructores","obtenerInstructores","length","expresion","RegExp","normalize","replace","filter","toLowerCase","search","firstChild","removeChild","instructorHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarInstructores","obtenerInstructor","InstructorDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","lenght","needle","iguales","repeatedTag","$tagsInput","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,mBACAK,EAAAN,SAAAC,cAAA,oBAEAC,EAAAK,iBAAA,SAAAC,GACAL,EAAAM,QAAAC,GAAAA,EAAAH,iBAAA,SAAAC,IAEA,IAAAG,EAAA,CACAC,cAAAV,EAAAW,OAAA,GACAH,KAAAL,EAAAQ,OAAA,IAmBA,SAAAL,EAAAM,GACAH,EAAAG,EAAAC,OAAAC,MAAAF,EAAAC,OAAAF,MAGAP,EAAAO,MAAA,GACAR,EAAAQ,MAAA,GAEA,MAAAI,EAAAjB,SAAAC,cAAA,8BACAgB,GACAA,EAAAC,UAAAC,OAAA,6BAGAC,OAAAC,OAAAV,GAAAW,SAAA,KAIAC,IAGAC,eAAAD,IACA,MAAAb,IAAAA,EAAAE,aAAAA,GAAAD,EAEAc,EAAA,uCAAAf,kBAAAE,IAEAc,QAAAC,MAAAF,SACAC,EAAAE,QAKA,SAAAC,GAEA7B,SAAAI,iBAAA,aACAK,QAAAqB,GACAA,EAAAZ,UAAAC,OAAA,8BAGAnB,SAAAI,iBACA,6CAEAK,QAAAsB,GACAA,EAAAxB,iBAAA,QAAAyB,IAdAC,GAkBA,SAAAD,EAAAlB,GAEA,MAAAG,EAAAjB,SAAAC,cAAA,8BACAgB,GACAA,EAAAC,UAAAC,OAAA,6BAGAL,EAAAC,OAAAG,UAAAgB,IAAA,6BAEA5B,EAAAO,MAAAC,EAAAC,OAAAoB,QAAAC,OAGA/B,EAAAQ,MAAAb,SAAAC,cACA,wBACAY,MA3EAO,OAAAC,OAAAV,GAAAW,SAAA,KACA,iBACAC,IAGA,MAAAc,EAAArC,SAAAC,cACA,kBAAAK,EAAAO,WAGAwB,EAAAnB,UAAAC,OAAA,6BACAkB,EAAAnB,UAAAgB,IAAA,6BAEAG,EAAAC,OAAAN,GAXA,IAlBA,GCAA,WACA,MAAAO,EAAAvC,SAAAC,cAAA,iBAEA,GAAAsC,EAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA,MAAAC,EAAA1C,SAAAC,cAAA,yBACA0C,EAAA3C,SAAAC,cAAA,0BA4FA,SAAA2C,EAAA9B,GACA,MAAA+B,EAAA/B,EAAAC,OAGA+B,EAAA9C,SAAAC,cACA,mDAEA6C,GACAA,EAAA5B,UAAAC,OACA,kDAIA0B,EAAA3B,UAAAgB,IACA,kDAGAS,EAAA9B,MAAAgC,EAAAV,QAAAY,cAxFAvB,iBACA,MACAwB,QAAArB,MADA,sBAaA,SAAAsB,EAAA,IACAT,EAAAS,EAAAC,IAAAL,IACA,CACAM,OAAA,GAAAN,EAAAM,OAAAC,UAAAP,EAAAQ,SAAAD,SACAE,GAAAT,EAAAS,MAdAC,OADAP,EAAApB,QAtBA4B,GAEAjB,EAAAhC,iBAAA,SAuCA,SAAAO,GACA,MAAAH,EAAAG,EAAAC,OAAAF,MAEA,GAAAF,EAAA8C,OAAA,EAAA,CACA,MAAAC,EAAA,IAAAC,OACAhD,EAAAiD,UAAA,OAAAC,QAAA,mBAAA,IACA,KAEApB,EAAAD,EAAAsB,OAAAjB,IACA,IAKA,GAJAA,EAAAM,OACAS,UAAA,OACAC,QAAA,mBAAA,IACAE,cACAC,OAAAN,GAEA,OAAAb,SAIAJ,EAAA,IAMA,WACA,KAAAC,EAAAuB,YACAvB,EAAAwB,YAAAxB,EAAAuB,YAGA,GAAAxB,EAAAgB,OAAA,EACAhB,EAAAhC,QAAAoC,IACA,MAAAsB,EAAAnE,SAAAoE,cAAA,MACAD,EAAAjD,UAAAgB,IAAA,oCACAiC,EAAAE,YAAAxB,EAAAM,OACAgB,EAAAhC,QAAAY,aAAAF,EAAAS,GACAa,EAAAG,QAAA1B,EAGAF,EAAA6B,YAAAJ,SAEA,CACA,MAAAK,EAAAxE,SAAAoE,cAAA,KACAI,EAAAtD,UAAAgB,IAAA,uCACAsC,EAAAH,YAAA,qCACA3B,EAAA6B,YAAAC,IAvBAC,MA5DA9B,EAAA9B,OACA,WACA,MAAAgC,QAoBArB,eAAA8B,GACA,MAAA7B,EAAA,sBAAA6B,EACAN,QAAArB,MAAAF,GAEA,aADAuB,EAAApB,OAvBA8C,CAAA/B,EAAA9B,OAEA8D,EAAA3E,SAAAoE,cAAA,MACAO,EAAAzD,UAAAgB,IACA,mCACA,kDAEAyC,EAAAN,YAAA,GAAAxB,EAAAM,UAAAN,EAAAQ,WAEAX,EAAA6B,YAAAI,IAVA,IAfA,GCAA,WACA,MAAAC,EAAA5E,SAAAC,cAAA,eAEA,GAAA2E,EAAA,CACA,MAAAC,EAAA7E,SAAAC,cAAA,SACA6E,EAAA9E,SAAAC,cAAA,iBAEA,IAAA8E,EAAA,GA8BA,SAAAC,IACAH,EAAAR,YAAA,GAEAU,EAAAtE,QAAAwE,IACA,MAAAC,EAAAlF,SAAAoE,cAAA,MACAc,EAAAhE,UAAAgB,IAAA,mBACAgD,EAAAb,YAAAY,EACAC,EAAAC,WAAAC,EACAP,EAAAN,YAAAW,KAEAG,IAGA,SAAAD,EAAAtE,GACAA,EAAAC,OAAAI,SACA4D,EAAAA,EAAAjB,OAAAmB,GAAAA,IAAAnE,EAAAC,OAAAsD,aACAgB,IAGA,SAAAA,IACAP,EAAAjE,MAAAkE,EAAAO,WA/CA,KAAAR,EAAAjE,QACAkE,EAAAD,EAAAjE,MAAA0E,MAAA,KACAP,KAIAJ,EAAArE,iBAAA,YAEA,SAAAO,GACA,GAAA,KAAAA,EAAA0E,QAAA,CACA,GACA,KAAA1E,EAAAC,OAAAF,MAAAuC,QACAtC,EAAAC,OAAAF,MAAA4E,OAAA,GAsCA,SAAAV,EAAAW,GACA,IAAAC,GAAA,EAMA,OALAZ,EAAAtE,QAAAwE,IACAA,EAAAlB,cAAAX,SAAAsC,EAAA3B,cAAAX,SACAuC,GAAA,KAGAA,EA5CAC,CAAAb,EAAAjE,EAAAC,OAAAF,OAGA,YADAgF,WAAAhF,MAAA,IAIAC,EAAAgF,iBACAf,EAAA,IAAAA,EAAAjE,EAAAC,OAAAF,MAAAuC,QACAwB,EAAA/D,MAAA,GAEAmE,SAjCA","file":"bundle.js","sourcesContent":["(function () {\r\n  const horas = document.querySelector(\"#horas\");\r\n\r\n  if (horas) {\r\n    const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n    categoria.addEventListener(\"change\", terminoBusqueda);\r\n    dias.forEach((dia) => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n    let busqueda = {\r\n      categoria_id: +categoria.value || \"\",\r\n      dia: +inputHiddenDia.value || \"\",\r\n    };\r\n\r\n    if (!Object.values(busqueda).includes(\"\")) {\r\n      (async () => {\r\n        await buscarEventos();\r\n\r\n        //resaltar la hora actual\r\n        const horaSeleccionada = document.querySelector(\r\n          `[data-hora-id=\"${inputHiddenHora.value}\"]`\r\n        );\r\n\r\n        horaSeleccionada.classList.remove(\"horas__hora--desabilitada\");\r\n        horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\r\n\r\n        horaSeleccionada.onclik = seleccionarHora;\r\n      })();\r\n    }\r\n\r\n    function terminoBusqueda(e) {\r\n      busqueda[e.target.name] = e.target.value;\r\n\r\n      //Reiniciar los campos ocultos y el selector de horas\r\n      inputHiddenHora.value = \"\";\r\n      inputHiddenDia.value = \"\";\r\n\r\n      const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n      if (horaPrevia) {\r\n        horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n      }\r\n\r\n      if (Object.values(busqueda).includes(\"\")) {\r\n        return;\r\n      }\r\n\r\n      buscarEventos();\r\n    }\r\n\r\n    async function buscarEventos() {\r\n      const { dia, categoria_id } = busqueda;\r\n\r\n      const url = `/api/complementarias-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n      const resultado = await fetch(url);\r\n      const eventos = await resultado.json();\r\n\r\n      obtenerHorasDisponibles(eventos);\r\n    }\r\n\r\n    function obtenerHorasDisponibles(eventos) {\r\n      // Reiniciar las horas\r\n      const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n      listadoHoras.forEach((li) =>\r\n        li.classList.remove(\"horas__hora--desabilitada\")\r\n      );\r\n\r\n      const horasDisponibles = document.querySelectorAll(\r\n        \"#horas li:not(.horas__hora--desabilitada)\"\r\n      );\r\n      horasDisponibles.forEach((hora) =>\r\n        hora.addEventListener(\"click\", seleccionarHora)\r\n      );\r\n    }\r\n\r\n    function seleccionarHora(e) {\r\n      //Desabilitar hora previa si hay un nuevo click\r\n      const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n      if (horaPrevia) {\r\n        horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n      }\r\n      // Agregar clase de seleccionado\r\n      e.target.classList.add(\"horas__hora--seleccionada\");\r\n\r\n      inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n      //Llenar el campo oculto con del dia\r\n      inputHiddenDia.value = document.querySelector(\r\n        '[name=\"dia\"]:checked'\r\n      ).value;\r\n    }\r\n  }\r\n})();\r\n","(function () {\r\n  const instructoresInput = document.querySelector(\"#instructores\");\r\n\r\n  if (instructoresInput) {\r\n    let instructores = [];\r\n    let instructoresFiltrados = [];\r\n\r\n    const listadoInstructores = document.querySelector(\"#listado-instructores\");\r\n    const instructorHidden = document.querySelector('[name=\"instructor_id\"]');\r\n\r\n    obtenerInstructores();\r\n\r\n    instructoresInput.addEventListener(\"input\", buscarInstructores);\r\n\r\n    if (instructorHidden.value) {\r\n      (async () => {\r\n        const instructor = await obtenerInstructor(instructorHidden.value);\r\n        //Insertar en el html\r\n        const InstructorDOM = document.createElement(\"LI\");\r\n        InstructorDOM.classList.add(\r\n          \"listado-instructores__instructor\",\r\n          \"listado-instructores__instructor--seleccionado\"\r\n        );\r\n        InstructorDOM.textContent = `${instructor.nombre} ${instructor.apellido}`;\r\n\r\n        listadoInstructores.appendChild(InstructorDOM);\r\n      })();\r\n    }\r\n\r\n    async function obtenerInstructores() {\r\n      const url = `/api/instructores`;\r\n      const respuesta = await fetch(url);\r\n      const resultado = await respuesta.json();\r\n      formatearInstructores(resultado);\r\n    }\r\n\r\n    async function obtenerInstructor(id) {\r\n      const url = `/api/instructor?id=${id}`;\r\n      const respuesta = await fetch(url);\r\n      const resultado = await respuesta.json();\r\n      return resultado;\r\n    }\r\n\r\n    function formatearInstructores(arrayInstructores = []) {\r\n      instructores = arrayInstructores.map((instructor) => {\r\n        return {\r\n          nombre: `${instructor.nombre.trim()} ${instructor.apellido.trim()}`,\r\n          id: instructor.id,\r\n        };\r\n      });\r\n    }\r\n    function buscarInstructores(e) {\r\n      const busqueda = e.target.value;\r\n\r\n      if (busqueda.length > 3) {\r\n        const expresion = new RegExp(\r\n          busqueda.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"),\r\n          \"i\"\r\n        );\r\n        instructoresFiltrados = instructores.filter((instructor) => {\r\n          if (\r\n            instructor.nombre\r\n              .normalize(\"NFD\")\r\n              .replace(/[\\u0300-\\u036f]/g, \"\")\r\n              .toLowerCase()\r\n              .search(expresion) != -1\r\n          ) {\r\n            return instructor;\r\n          }\r\n        });\r\n      } else {\r\n        instructoresFiltrados = [];\r\n      }\r\n\r\n      mostrarInstructores();\r\n    }\r\n\r\n    function mostrarInstructores() {\r\n      while (listadoInstructores.firstChild) {\r\n        listadoInstructores.removeChild(listadoInstructores.firstChild);\r\n      }\r\n\r\n      if (instructoresFiltrados.length > 0) {\r\n        instructoresFiltrados.forEach((instructor) => {\r\n          const instructorHTML = document.createElement(\"LI\");\r\n          instructorHTML.classList.add(\"listado-instructores__instructor\");\r\n          instructorHTML.textContent = instructor.nombre;\r\n          instructorHTML.dataset.instructorId = instructor.id;\r\n          instructorHTML.onclick = seleccionarInstructor;\r\n\r\n          //Agregar al DOM\r\n          listadoInstructores.appendChild(instructorHTML);\r\n        });\r\n      } else {\r\n        const noResultados = document.createElement(\"P\");\r\n        noResultados.classList.add(\"listado-instructores__no-resultados\");\r\n        noResultados.textContent = \"No hay resultados para tu busqueda\";\r\n        listadoInstructores.appendChild(noResultados);\r\n      }\r\n    }\r\n    function seleccionarInstructor(e) {\r\n      const instructor = e.target;\r\n\r\n      //remover la clase previa\r\n      const instructorPrevio = document.querySelector(\r\n        \".listado-instructores__instructor--seleccionado\"\r\n      );\r\n      if (instructorPrevio) {\r\n        instructorPrevio.classList.remove(\r\n          \"listado-instructores__instructor--seleccionado\"\r\n        );\r\n      }\r\n\r\n      instructor.classList.add(\r\n        \"listado-instructores__instructor--seleccionado\"\r\n      );\r\n\r\n      instructorHidden.value = instructor.dataset.instructorId;\r\n    }\r\n  }\r\n})();\r\n","(function () {\r\n  const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n  if (tagsInput) {\r\n    const tagsDiv = document.querySelector(\"#tags\");\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    //Recuperar los tags del input hidden\r\n    if (tagsInputHidden.value !== \"\") {\r\n      tags = tagsInputHidden.value.split(\",\");\r\n      mostrarTags();\r\n    }\r\n\r\n    //Escuchar los cambios en el input\r\n    tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n    function guardarTag(e) {\r\n      if (e.keyCode === 44) {\r\n        if (\r\n          e.target.value.trim() === \"\" ||\r\n          e.target.value.lenght < 1 ||\r\n          repeatedTag(tags, e.target.value)\r\n        ) {\r\n          $tagsInput.value = \"\";\r\n          return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        tags = [...tags, e.target.value.trim()];\r\n        tagsInput.value = \"\";\r\n\r\n        mostrarTags();\r\n      }\r\n    }\r\n\r\n    function mostrarTags() {\r\n      tagsDiv.textContent = \"\";\r\n\r\n      tags.forEach((tag) => {\r\n        const etiqueta = document.createElement(\"LI\");\r\n        etiqueta.classList.add(\"formulario__tag\");\r\n        etiqueta.textContent = tag;\r\n        etiqueta.ondblclick = eliminarTag;\r\n        tagsDiv.appendChild(etiqueta);\r\n      });\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e) {\r\n      e.target.remove();\r\n      tags = tags.filter((tag) => tag !== e.target.textContent);\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n    function repeatedTag(tags, needle) {\r\n      let iguales = false;\r\n      tags.forEach((tag) => {\r\n        if (tag.toLowerCase().trim() === needle.toLowerCase().trim()) {\r\n          iguales = true;\r\n        }\r\n      });\r\n      return iguales;\r\n    }\r\n  }\r\n})();\r\n"]}